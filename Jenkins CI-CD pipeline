#Build a Deployment Pipeline
#Set up a streamlined build and deployment pipeline for the nginx application using GitHub Actions or an equivalent CI/CD tool. Ensure the pipeline covers building the Docker image, running security checks, and deploying to a Kubernetes cluster.




pipeline {
    agent any

    environment {
        IMAGE_NAME = "your-dockerhub-username/nginx-app"
        IMAGE_TAG = "latest"
        KUBE_NAMESPACE = "default"
        DEPLOYMENT_NAME = "nginx-statefulset"
        CONTAINER_NAME = "nginx"
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t ${IMAGE_NAME}:${IMAGE_TAG} ."
                }
            }
        }

        stage('Run Security Scan') {
            steps {
                script {
                    sh '''
                    curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
                    sudo mv trivy /usr/local/bin/
                    trivy image ${IMAGE_NAME}:${IMAGE_TAG}
                    '''
                }
            }
        }

        stage('Push Image to Docker Hub') {
            steps {
                script {
                    withDockerRegistry([credentialsId: 'docker-hub-credentials', url: '']) {
                        sh "docker push ${IMAGE_NAME}:${IMAGE_TAG}"
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    withKubeConfig([credentialsId: 'kube-config-secret']) {
                        sh '''
                        kubectl set image statefulset/${DEPLOYMENT_NAME} ${CONTAINER_NAME}=${IMAGE_NAME}:${IMAGE_TAG} -n ${KUBE_NAMESPACE}
                        kubectl rollout status statefulset/${DEPLOYMENT_NAME} -n ${KUBE_NAMESPACE}
                        '''
                    }
                }
            }
        }
    }
}
