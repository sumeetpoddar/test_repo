#Kubernetes StatefulSet
#Write a Kubernetes StatefulSet to deploy the nginx container from the previous question. Utilize persistent volume claims and define resource limits for optimal performance.

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nginx-statefulset
spec:
  serviceName: nginx-service
  replicas: 2  # Number of Nginx instances
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.19-alpine  # We can use the image built from the last problem statement
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-persistent-storage
          mountPath: /usr/share/nginx/html  # Mount for serving static files
        - name: nginx-logs
          mountPath: /var/log/nginx  # Mount logs directory
        resources:
          requests:
            cpu: "250m"   # Requests 250 millicores of CPU
            memory: "256Mi"  # Requests 256MB RAM
          limits:
            cpu: "500m"   # Max CPU 500 millicores
            memory: "512Mi"  # Max Memory 512MB
  volumeClaimTemplates:
  - metadata:
      name: nginx-persistent-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi  # 1GB storage for static content
  - metadata:
      name: nginx-logs
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 500Mi  # 500MB storage for logs
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  clusterIP: None  # Headless service for StatefulSet
